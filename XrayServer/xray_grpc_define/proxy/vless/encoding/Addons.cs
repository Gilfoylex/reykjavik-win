// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proxy/vless/encoding/addons.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Xray.Proxy.Vless.Encoding {

  /// <summary>Holder for reflection information generated from proxy/vless/encoding/addons.proto</summary>
  public static partial class AddonsReflection {

    #region Descriptor
    /// <summary>File descriptor for proxy/vless/encoding/addons.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AddonsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFwcm94eS92bGVzcy9lbmNvZGluZy9hZGRvbnMucHJvdG8SGXhyYXkucHJv",
            "eHkudmxlc3MuZW5jb2RpbmciJAoGQWRkb25zEgwKBEZsb3cYASABKAkSDAoE",
            "U2VlZBgCIAEoDEJtCh1jb20ueHJheS5wcm94eS52bGVzcy5lbmNvZGluZ1AB",
            "Wi5naXRodWIuY29tL3h0bHMveHJheS1jb3JlL3Byb3h5L3ZsZXNzL2VuY29k",
            "aW5nqgIZWHJheS5Qcm94eS5WbGVzcy5FbmNvZGluZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Xray.Proxy.Vless.Encoding.Addons), global::Xray.Proxy.Vless.Encoding.Addons.Parser, new[]{ "Flow", "Seed" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Addons : pb::IMessage<Addons> {
    private static readonly pb::MessageParser<Addons> _parser = new pb::MessageParser<Addons>(() => new Addons());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Addons> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xray.Proxy.Vless.Encoding.AddonsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Addons() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Addons(Addons other) : this() {
      flow_ = other.flow_;
      seed_ = other.seed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Addons Clone() {
      return new Addons(this);
    }

    /// <summary>Field number for the "Flow" field.</summary>
    public const int FlowFieldNumber = 1;
    private string flow_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Flow {
      get { return flow_; }
      set {
        flow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Seed" field.</summary>
    public const int SeedFieldNumber = 2;
    private pb::ByteString seed_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Seed {
      get { return seed_; }
      set {
        seed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Addons);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Addons other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flow != other.Flow) return false;
      if (Seed != other.Seed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Flow.Length != 0) hash ^= Flow.GetHashCode();
      if (Seed.Length != 0) hash ^= Seed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Flow.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Flow);
      }
      if (Seed.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Seed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Flow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Flow);
      }
      if (Seed.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Seed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Addons other) {
      if (other == null) {
        return;
      }
      if (other.Flow.Length != 0) {
        Flow = other.Flow;
      }
      if (other.Seed.Length != 0) {
        Seed = other.Seed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Flow = input.ReadString();
            break;
          }
          case 18: {
            Seed = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
